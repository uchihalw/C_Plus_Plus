/*
 * @file   16.stack.cpp
 * @date   2019.3.8.
 * @author GBW
 * @Description: 
 
 * @Note:
 
 */
0. 程序必须在运行时对自动变量进行管理。
	常用的方法是留出一段内存，并将其视为栈，以管理变量的增减。
	之所以称为栈，是由于新数据被象征性的放在原有数据的上面(也就是说，在相邻的内存单元中，而不是在同一个内存单元中)
1. 函数调用在栈中的使用：func(10,15)
	0. 函数调用前的栈
		stack<0>. 原始栈状态:[0,1，*] // *指向栈顶
	1. 函数调用后的栈(函数将参数压入栈中)
		stack<1>. [0,1,10,15,*] // *指向栈顶
	2. 函数开始执行后的栈
		void func(int x, int y) {...}
		stack<2>.[0, 1, 10, 15, *] // *指向栈顶,且函数执行时，将形参与栈中的值关联起来
	3. 函数结束后的栈
		stack<3>.[0, 1，*] // *指向栈顶，且栈顶恢复到原来的位置
